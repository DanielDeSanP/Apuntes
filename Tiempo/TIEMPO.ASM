.MODEL SMALL
.DATA
MENSAJE DB 'La hora es: $'
.STACK
.CODE


INICIO:
	MOV AX,@DATA
	MOV DS,AX
	LEA	DX,MENSAJE
	MOV	AH,9H
	INT 21H
	MOV	AH,2CH ;LEE LA HORA 
	MOV BH,DL
	INT	21H
	MOV	AL,CH 	;CARGA LAS HORAS
	CALL CONV 	;LAS DESPLIEGA 
	MOV DL,':'
	MOV	AH,2
	INT 21H
	MOV AL,CL 	;CARGA LOS MINUTOS
	CALL CONV 	;LOS DESPLIEGA
	MOV DL, ':'
	MOV AH,2
	INT 21H



;EL PROCEDIMIENTO SON COMO LAS FUNCIONES EN ALTO NIVEL
;ESTE ES LOCALIZADO EN MEMORIA
;HACE UN SALTO PARA PODER EJECUTAR EL LAS INSTRUCCIONES EN EL PROCEDIMIENTO
;LAS MACROS NO LO HACEN, SOLO SE ADIEREN AL CODIGO.
;LAS MACROS SON UN POCO MAS RAPIDOS, PERO HACEN MAS GRANDE LA EXTENSION DEL CODIGO
;OCUPAN MAS MEMORIA
;LOS PROCEDIMIENTOS SON MENOS RAPIDOS, PERO HACEN EL CODIGO MAS LIGERO

CONV PROC ;ESTO ES UNA MACRO

	MOV	AH,0
	MOV	BL,10D
	DIV	BL 	; DIVIDE LO QUE TIENE AL ENTRE LO QUE TIENE EN BL, EL 
			; EL RESULTADO LO MANDA A AL Y EL RESIDUO A AH. 
	ADD	AL,30H	;OBTENEMOS EL NUMERO CONTENIDO EN AL
	MOV	DL,AL	;LO PREPARAMOS PARA DESPLEGARLO EN PANTALLA
	PUSH AX		;ALMACENA EL VALOR EN AX
	MOV AH,21H	;DESPLIEGA EL CARACTER EN PANTALLA
	INT 21H

	POP AX		;OBTIENE EL PRIMER DIGITO DE LA PILA
	ADD AH,30H	;EN AH PUSO EL RESIUDO Y LO CONVIERTE EN NUMERO 
	MOV DL,AH	;IMPRIME EL RESIDUO EN PANTALLA
	MOV AH,2H 	
	INT 21H
	RET
	CONV ENDP
END INICIO 